{{- if ne .chezmoi.os "windows" -}}
[include]
  path = catppuccin.gitconfig
{{- end }}

[user]
  name = {{ .fullName }}
  email = {{ if eq .chezmoi.hostname "vancanh-ng02" -}} {{ .knoxEmail | quote }} {{- else -}} {{ .email | quote }} {{- end }}

[credential]
  helper = store

[credential "https://github.com"]
  helper =
  username = canh25xp
  helper = !gh auth git-credential

[credential "https://gist.github.com"]
  helper =
  helper = !gh auth git-credential

[credential "https://huggingface.co"]
  provider = generic

[credential "https://github.sec.samsung.net"]
  helper =
  helper = !gh auth git-credential

[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge --skip -- %f
  process = git-lfs filter-process --skip

[core]
{{- if ne .chezmoi.os "windows" }}
  pager = delta
{{- end }}
  editor = nvim

[init]
  defaultBranch = main

[pull]
  rebase = true

[push]
  autoSetupRemote = true

[diff]
  colorMoved = default

{{- if ne .chezmoi.os "windows" }}
[interactive]
  diffFilter = delta --color-only

[delta]
  features = decorations
  line-numbers = true
  navigate = true
{{- end }}

[merge]
  tool = nvimdiff
  conflictstyle = diff3

[mergetool]
  prompt = false
  keepBackup = false

[mergetool "nvimdiff"]
  layout = "MERGED"

[alias]
{{- if eq .chezmoi.os "windows" }}
  p4 = !python.exe 'C:\\Program Files\\Git\\mingw64\\libexec\\git-core\\git-p4'
{{- end }}
  s = status --verbose
  a = add
  a = add --all
  au = add --update
  b = branch --verbose
  c = commit --verbose
  ca = commit --all --verbose
  cm = commit --amend --verbose
  d = diff
  ds = diff --stat
  dc = diff --cached
  r = remote --verbose
  nuke = "!git reset --hard HEAD && git clean -fd"
  logs = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  graph = log --graph --all --oneline --decorate
  list = ls-tree --full-tree --name-only -r HEAD
  fzf = "!git ls-files | fzf | xargs -r ${EDITOR:-nvim}"
  alias = "!git config -l | grep alias | cut -c 7-"
  diff-file-last-commit = "!f() { \
    project_root_dir=$(git rev-parse --show-toplevel); \
    echo finding full file path of $1 in $project_root_dir; \
    filepath=$(find $project_root_dir -type f -name $1); \
    echo full file path $filepath; \
    last_modified_commit_hash=$(git rev-list -1 HEAD $filepath); \
    echo last commit file modified $last_modified_commit_hash; \
    git difftool $last_modified_commit_hash^ $filepath; \
  }; f"

[git-p4]
  user = {{ .knoxID }}
  password = {{ .knoxPW }}
  port = {{ .p4Port }}
  client = {{ .p4Client }}
