" .ideavimrc is a configuration file for IdeaVim plugin.
" It uses the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc
" https://github.com/JetBrains/ideavim/discussions/303?sort=top#discussioncomment-7664118

" source ~/.vimrc
let mapleader=" "
let g:highlightedyank_highlight_duration = "200"
let g:highlightedyank_highlight_color = "rgba(255, 105, 180, 155)"

set showmode
set smartcase
set ignorecase
set ideajoin
set number
set relativenumber
set smartcase
set hlsearch
set incsearch "Show where search pattern typed so far matches
set scrolloff=5
set clipboard=unnamedplus
set which-key
set notimeout
set timeoutlen=5000

nmap \\v <Action>(VimActions)
imap jk <ESC>
map Q gq
map U <C-R>
nnoremap <silent> <ESC> :nohlsearch<CR>
nmap za <Action>(CollapseAllRegions)
nmap zA <Action>(ExpandAllRegions)
nmap <C-\> <Action>(ActivateTerminalToolWindow)

nmap <leader>dd <Action>(Debug)
nmap <leader>db <Action>(ToggleLineBreakpoint)
nmap <leader>de <Action>(EditBreakpoint)
nmap <leader>dv <Action>(ViewBreakpoints)

map <leader>e :NERDTreeFocus<CR>
map <leader>zz <Action>(ToggleDistractionFreeMode)
"nmap <leader>Z <Action>(ToggleZenMode)
nmap <leader>k <Action>(ShowHoverInfo)
nmap <leader>K <Action>(ShowErrorDescription)
nmap <leader>tt <Action>(ActivateTerminalToolWindow)
nmap <leader>tc <Action>(Terminal.OpenInTerminal)

nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]e <Action>(GotoNextError)
nmap [e <Action>(GotoPreviousError)
nmap [o <Action>(PreviousOccurence)
nmap ]o <Action>(NextOccurence)

nmap <leader>a <Action>(GotoAction)
nmap ga <Action>(GotoAction)
nmap gc <Action>(GotoClass)
nmap gf <Action>(GotoFile)
nmap gs <Action>(GotoSymbol)
nmap gt <Action>(GotoTest)
nmap gT <Action>(TextSearchAction)
nmap go <Action>(GotoSuperMethod)
nmap gd <Action>(GotoDeclaration)
nmap gD <Action>(GotoTypeDeclaration)
nmap gi <Action>(GotoImplementation)
nmap gI <Action>(QuickImplementations)
nmap gn <Action>(ShowNavBar)

"nmap <C-i> <Action>(Back)
"nmap <C-o> <Action>(Forward)

" buffer
nmap <leader>bd <Action>(CloseContent)
nmap <leader>ba <Action>(CloseAllEditors)
nmap <leader>bo <Action>(CloseAllEditorsButActive)
nmap <leader>bu <Action>(CloseAllUnpinnedEditors)
nmap <leader>bp <Action>(PinActiveEditorTab)

" window
nmap <C-k> <C-w>k
nmap <C-j> <C-w>j
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l
nmap H <Action>(PreviousTab)
nmap L <Action>(NextTab)
nmap <leader>ww <Action>(HideAllWindows)
nmap <leader>wk <Action>(StretchSplitToTop)
nmap <leader>wj <Action>(StretchSplitToBottom)
nmap <leader>wh <Action>(StretchSplitToLeft)
nmap <leader>wl <Action>(StretchSplitToRight)
nmap <leader>wm <Action>(MaximizeEditorInSplit)
nmap <leader>wu <Action>(UnsplitAll)

" menu
nmap <leader>mm <Action>(MainMenu)
nmap <leader>ma <Action>(AnalyzeMenu)
nmap <leader>mb <Action>(BuildMenu)
nmap <leader>mc <Action>(CodeMenu)
nmap <leader>mf <Action>(FindMenuGroup)
nmap <leader>mg <Action>(GoToMenu)
nmap <leader>ms <Action>(ScopeViewPopupMenu)
nmap <leader>mt <Action>(EditorTabPopupMenu)
nmap <leader>mw <Action>(ToolWindowsGroup)
nmap <leader>wb <Action>(BuildMenu)

" tab
map <leader>- <Action>(SplitHorizontally)
map <leader>\\ <Action>(SplitVertically)
"map <leader>sh <Action>(MoveTabLeft)
"map <leader>sj <Action>(MoveTabDown)
"map <leader>sk <Action>(MoveTabUp)
"map <leader>sl <Action>(MoveTabRight)

" file
nmap <leader>fe <Action>(OpenFile)
"nmap <leader>yp <Action>(CopyAbsolutePath)
"nmap <leader>rf <Action>(RecentFiles)
"nmap <leader>rl <Action>(RecentLocations)
"nmap <leader>rp <Action>(ManageRecentProjects)
"nmap <leader>sh <Action>(LocalHistory.ShowHistory)
"nmap <leader>sf <Action>(ShowFilePath)
"nmap <leader>si <Action>(SelectIn)
nmap <leader>sg <Action>(FindInPath)
"nmap <leader>rp <Action>(ReplaceInPath)
nmap <leader>sw <Action>($SearchWeb)

" code
"map <leader>c <Action>(CommentByLineComment)
"map <leader>C <Action>(CommentByBlockComment)
"nmap <leader>qf <Action>(ShowIntentionActions)
"nmap <leader>se <Action>(ShowErrorDescription)
"nmap <leader>om <Action>(OverrideMethods)
"nmap <leader>im <Action>(ImplementMethods)
nmap <leader>cf <Action>(ReformatCode)
"nmap <leader>ic <Action>(InspectCode)
"nmap <leader>so <Action>(SelectAllOccurrences)
"nmap <leader>gc <Action>(Generate)
"nmap <leader>gt <Action>(GotoTest)

" refactor
nmap <leader>cr <Action>(RenameElement)
nmap <leader>ca <Action>(Refactorings.QuickListPopupAction)
nmap <leader>cw <Action>(Unwrap)
nmap <leader>cs <Action>(SurroundWith)
nmap <leader>cd <Action>(SafeDelete)
nmap <leader>co <Action>(OptimizeImports)

" run
"nmap <leader>rc <Action>(ContextRun)
"nmap <leader>rx <Action>(chooseRunConfiguration)
"nmap <leader>rr <Action>(Rerun)
"nmap <leader>rt <Action>(RunTests)
"nmap <leader>rs <Action>(Stop)

" tag
nmap <leader>fu <Action>(FindUsages)
nmap <leader>fs <Action>(FileStructurePopup)
nmap <leader>su <Action>(ShowUsages)
nmap <leader>hl <Action>(HighlightUsagesInFile)
nmap <leader>qp <Action>(QuickPreview)
nmap <leader>qd <Action>(QuickDefinition)
nmap <leader>qD <Action>(QuickTypeDefinition)

" handlers
sethandler <C-C> n-v:ide i:vim
sethandler <C-V> n-v:vim i:ide
sethandler <C-A> n:vim i-x:ide

Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'